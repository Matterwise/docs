openapi: 3.0.0

servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MOAZELSAYED002/matterwise/1.0.0
  - url: "{protocol}://localhost:{port}/workspaces/{workspace_id}"
    variables:
      protocol:
        default: http
        enum:
          - http
          - https
      port:
        enum:
          - "443"
          - "8443"
        default: "8443"
      workspace_id:
        default: "1"
        description: workspace id

info:
  description: matterwise API
  version: "1.0.0"
  title: matterwise API

tags:
  - name: Users
    description: Operations about users
  - name: Channels
    description: Operations about channels
  - name: Threads
    description: Operations about threads

paths:
  /channels:
    get:
      tags:
        - Channels
      summary: Get channels within a workspace
      responses:
        "200":
          description: A list of channels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Channel"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - Channels
      summary: Create a new channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "201":
          description: Channel created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /channels/{channel_id}:
    put:
      tags:
        - Channels
      summary: Update a channel by ID
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          description: Channel updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

    delete:
      tags:
        - Channels
      summary: Delete a channel by ID
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Channel deleted
        "500":
          $ref: "#/components/responses/InternalServerError"
        "404":
          $ref: "#/components/responses/NotFound"
  /channels/{channel_id}/users:
    get:
      tags:
        - Channels
      summary: Get users of a channel
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "404":
          $ref: "#/components/responses/NotFound"
  /channels/{channel_id}/messages:
    get:
      tags:
        - Channels
      summary: Get messages within a channel with cursor-based pagination
      parameters:
        - name: channel_id
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          required: false
          schema:
            type: string
            default: "0"
      responses:
        "200":
          description: A list of messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: "#/components/schemas/Message"
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      next_cursor:
                        type: string
                        format: uri
        "500":
          $ref: "#/components/responses/InternalServerError"
        "404":
          $ref: "#/components/responses/NotFound"

  /threads:
    get:
      tags:
        - Threads
      summary: Get threads a user participated in within a workspace 
      responses:
        "200":
          description: A list of threads
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThreadList"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /threads/{thread_id}:
    get:
      tags:
        - Threads
      summary: Get a thread by ID
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A thread
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Thread"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "404":
          $ref: "#/components/responses/NotFound"
    
    delete:
      tags:
        - Threads
      summary: Stop following a thread
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Thread deleted
        "500":
          $ref: "#/components/responses/InternalServerError"
        "404":
          $ref: "#/components/responses/NotFound"
  /threads/{thread_id}/messages:
    get:
      tags:
        - Threads
      summary: Get messages within a thread with cursor-based pagination
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          required: false
          schema:
            type: string
            default: "0"
      responses:
        "200":
          description: A list of messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: "#/components/schemas/Message"
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      next_cursor:
                        type: string
                        format: uri
        "500":
          $ref: "#/components/responses/InternalServerError"
        "404":
          $ref: "#/components/responses/NotFound"
  /threads/{thread_id}/users:
    get:
      tags:
        - Threads
      summary: Get users of a thread
      parameters:
        - name: thread_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "404":
          $ref: "#/components/responses/NotFound"    

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          readOnly: true
        role_id:
          type: string
          format: uuid
          readOnly: true
        bio:
          type: string
        avatar_url:
          type: string
          format: uri
        status_message:
          type: string
        online_status:
          type: string
          enum:
            - online
            - away
            - offline
        created_at:
          type: string
          format: date
          readOnly: true
        updated_at:
          type: string
          format: date
          readOnly: true
      required:
        - username
        - email
        - password
        - role_id
        - status_message
      example:
        id: "123e4567-e89b-12d3-a456-426614174001"
        username: "john_doe"
        email: "john.doe@example.com"
        password: "hashed_password_here"
        role_id: "987e6543-e89b-12d3-a456-426614174000"
        bio: "A passionate developer"
        avatar_url: "https://example.com/avatar.jpg"
        status_message: "Available for chat"
        online_status: "online"
        created_at: "2023-01-01"
        updated_at: "2023-01-02"

    Channel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - shared
            - private
            - direct
        creator_id:
          type: string
          format: uuid
          readOnly: true
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date
          readOnly: true
        updated_at:
          type: string
          format: date
          readOnly: true
      required:
        - name
        - description
        - type
        - creator_id
        - workspace_id
      example:
        id: "234e5678-e89b-12d3-a456-426614174002"
        name: "general"
        description: "General discussion"
        type: "shared"
        creator_id: "876e5432-e89b-12d3-a456-426614174001"
        workspace_id: "765e4321-e89b-12d3-a456-426614174000"
        created_at: "2023-02-01"
        updated_at: "2023-02-02"

    Workspace:
      type: object
      required:
        - id
        - creator_id
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        creator_id:
          type: string
          format: uuid
          readOnly: true
      example:
        id: "345e6789-e89b-12d3-a456-426614174003"
        name: "MyWorkspace"
        creator_id: "765e4321-e89b-12d3-a456-426614174000"

    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: string
        type:
          type: string
          enum:
            - text
            - file
            - emoji
            - reaction
        file_id:
          type: string
          format: uuid
          readOnly: true
        reaction_type:
          type: string
          enum:
            - like
            - heart
        sender_id:
          type: string
          format: uuid
          readOnly: true
        channel_id:
          type: string
          format: uuid
          readOnly: true
        parent_message_id:
          type: string
          format: uuid
          readOnly: true
        workspace_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date
          readOnly: true
        updated_at:
          type: string
          format: date
          readOnly: true

      required:
        - content
        - type
        - sender_id
        - channel_id
        - workspace_id
      example:
        id: "456e7890-e89b-12d3-a456-426614174004"
        content: "Hello, world!"
        type: "text"
        file_id: "543e6789-e89b-12d3-a456-426614174005"
        reaction_type: "like"
        sender_id: "654e7890-e89b-12d3-a456-426614174001"
        channel_id: "987e6543-e89b-12d3-a456-426614174002"
        parent_message_id: "876e5432-e89b-12d3-a456-426614174003"
        workspace_id: "765e4321-e89b-12d3-a456-426614174000"
        created_at: "2023-03-01"
        updated_at: "2023-03-02"

    File:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        filename:
          type: string
        file_size:
          type: integer
        file_type:
          type: string
        content:
          type: string
          format: binary
          readOnly: true
        message_id:
          type: string
          format: uuid
          readOnly: true
        uploaded_by:
          type: string
          format: uuid
          readOnly: true
        upload_at:
          type: string
          format: date
          readOnly: true
      required:
        - filename
        - file_size
        - file_type
        - uploaded_by
        - upload_at
      example:
        id: "567e8901-e89b-12d3-a456-426614174006"
        filename: "document.pdf"
        file_size: 1024
        file_type: "pdf"
        content: "base64_encoded_content_here"
        message_id: "654e7890-e89b-12d3-a456-426614174004"
        uploaded_by: "876e5432-e89b-12d3-a456-426614174001"
        upload_at: "2023-04-01"

    Thread:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        parent_message_id:
          type: string
          format: uuid
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              username:
                type: string
              avatar_url:
                type: string
                format: uri
        created_at:
          type: string
          format: date
          readOnly: true
        updated_at:
          type: string
          format: date
          readOnly: true
      required:
        - participant_ids
        - parent_message_id
        - messages
        - users
      example:
        id: "678e9012-e89b-12d3-a456-426614174007"
        parent_message_id: "654e7890-e89b-12d3-a456-426614174004"
        messages:
          - $ref: "#/components/schemas/Message" # Placeholder for message example
        users:
          - id: "876e5432-e89b-12d3-a456-426614174001"
            username: "user1"
            avatar_url: "https://example.com/user1.jpg"
        created_at: "2023-05-01"
        updated_at: "2023-05-02"

    ThreadList:
      type: array
      items:
        $ref: "#/components/schemas/Thread"
      example:
        thread_list:
          - $ref: "#/components/schemas/Thread"
          - $ref: "#/components/schemas/Thread"

    BadRequest:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      example:
        code: 400
        message: "Bad request"

    NotFound:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      example:
        code: 404
        message: "Not found"
    Unauthorized:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      example:
        code: 401
        message: "Unauthorized"
    InternalServerError:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      example:
        code: 500
        message: "Internal server error"

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFound"
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequest"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Unauthorized"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerError"
